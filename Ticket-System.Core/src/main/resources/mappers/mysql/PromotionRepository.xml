<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apps.mybatis.mysql.PromotionRepository">

    <select id="findAll" resultType="com.apps.domain.entity.Offer">
        select * from offer
        <where>
            <if test="search != null">
                name like %#{search}%
            </if>
            <if test="creationDate != null">
                and creation_date = #{creationDate}
            </if>
            <if test="startDate != null">
                and start_date = #{startDate}
            </if>

            <if test="type != null">
                and type = #{type}
            </if>
            <if test="method != null">
                and method = #{method}
            </if>
            <if test="creationBy != null">
                and creationBy = #{creationBy}
            </if>
<!--            <if test="anonProfile != null">-->
<!--                and anon_profile = #{anonProfile}-->
<!--            </if>-->
<!--            <if test="promotionType != null">-->
<!--                and promotion_type = #{promotionType}-->
<!--            </if>-->
        </where>
        <if test="sort != null">
            order by
            <choose>
                <when test="sort == 'id'">
                    id
                </when>
                <when test="sort == 'creationDate'">
                    creation_date
                </when>
                <when test="sort == 'startDate'">
                    start_date
                </when>
                <when test="sort == 'endDate'">
                    end_date
                </when>
                 <when test="sort == 'type'">
                     type
                </when>
<!--                 <when test="sort == 'priority'">-->
<!--                     priority-->
<!--                </when>-->
<!--                 <when test="sort == 'anonProfile'">-->
<!--                     anon_profile-->
<!--                </when>-->
<!--                <when test="sort == 'global'">-->
<!--                    global-->
<!--                </when>-->
<!--                <when test="sort == 'beginUsable'">-->
<!--                    begin_usable-->
<!--                </when>-->
            </choose>
        </if>

        <if test="order != 'ASC' and sort != null" >
            DESC
        </if>

        limit #{limit} offset #{offset}
    </select>

    <select id="findAllCount" resultType="INT">
        select count(*) from offer
        <where>
            <if test="search != null">
                name like %#{search}%
            </if>
            <if test="creationDate != null">
                and creation_date = #{creationDate}
            </if>
            <if test="startDate != null">
                and start_date = #{startDate}
            </if>

            <if test="type != null">
                and type = #{type}
            </if>
            <if test="method != null">
                and method = #{method}
            </if>
            <if test="creationBy != null">
                and creationBy = #{creationBy}
            </if>
            <!--            <if test="anonProfile != null">-->
            <!--                and anon_profile = #{anonProfile}-->
            <!--            </if>-->
            <!--            <if test="promotionType != null">-->
            <!--                and promotion_type = #{promotionType}-->
            <!--            </if>-->
        </where>

    </select>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into booksystem.payment(payment_method_id, amount, status, transaction_id, createtion_date, start_date, end_date, note, use_for, part_id)
        values (#{payment.paymentMethodId},#{payment.amount},#{payment.status},#{payment.transactionId},#{payment.createtionDate},
        #{payment.startDate},#{payment.endDate},#{payment.note},#{payment.useFor},#{payment.partId})
        <selectKey keyProperty="id" order="AFTER" resultType="int" statementType="PREPARED" >
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

</mapper>