<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apps.mybatis.mysql.RoomRepository">

    <select id="findAll" resultType="com.apps.domain.entity.Room">
        select * from room
        <where>
            <if test="search != null">
                name like concat('%',#{search},'%')
            </if>
            <if test="theater != null">
                and room.theater_id = #{theater}
            </if>
        </where>
        <if test="sort != null">
            order by
            <choose>
                <when test="sort == 'id'">
                    room.id
                </when>
                <when test="sort == 'name'">
                    name
                </when>
                <when test="sort == 'code'">
                    code
                </when>
                <when test="sort == 'theaterId'">
                    theater_id
                </when>
                <otherwise>
                    type
                </otherwise>
            </choose>
        </if>
        <if test="order != 'ASC' and sort != null" >
            DESC
        </if>
        limit #{limit} offset #{offset}
    </select>

    <select id="findCountAll" resultType="INT">
        select count(*) from room
        <where>
            <if test="search != null">
                name like concat('%',#{search},'%')
            </if>
            <if test="theater != null">
                and room.theater_id = #{theater}
            </if>
        </where>
    </select>


    <select id="findById" resultType="com.apps.domain.entity.Room">
        select * from room where id = #{id}
    </select>

    <update id="update" >
        update room
        <set>

            <if test="room.name != null">
                name = #{room.name},
            </if>
            <if test="room.code != null">
                code = #{room.code},
            </if>
            <if test="room.theaterId != null">
                theater_id = #{room.theaterId}
            </if>
        </set>
        where id = #{room.id}
    </update>

    <delete id="delete">
        delete from room where id = #{id}
    </delete>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO booksystem.room (code, name, theater_id,type)
        VALUES (#{room.code},#{room.name},#{room.theaterId},#{room.type})
        <selectKey keyProperty="returnedId" order="AFTER" resultType="INT" >
            SELECT LAST_INSERT_ID() as returnedId;
        </selectKey>
    </insert>

</mapper>